{
  "version": 1,
  "cli": {
    "analytics": "40c6cbc1-1c2b-465e-8578-96e570a11008",
    "defaultCollection": "@nrwl/angular"
  },
  "defaultProject": "user",
  "schematics": {
    "@nrwl/angular": {
      "application": {
        "linter": "eslint"
      },
      "library": {
        "linter": "eslint"
      },
      "storybook-configuration": {
        "linter": "eslint"
      }
    },
    "@nrwl/angular:application": {
      "style": "scss",
      "linter": "eslint",
      "unitTestRunner": "jest",
      "e2eTestRunner": "cypress"
    },
    "@nrwl/angular:library": {
      "style": "scss",
      "linter": "eslint",
      "unitTestRunner": "jest"
    },
    "@nrwl/angular:component": {
      "style": "scss"
    }
  },
  "projects": {
    "admin": {
      "projectType": "application",
      "root": "apps/admin",
      "sourceRoot": "apps/admin/src",
      "prefix": "ng-arab",
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:browser",
          "options": {
            "outputPath": "dist/apps/admin",
            "index": "apps/admin/src/index.html",
            "main": "apps/admin/src/main.ts",
            "polyfills": "apps/admin/src/polyfills.ts",
            "tsConfig": "apps/admin/tsconfig.app.json",
            "inlineStyleLanguage": "scss",
            "assets": ["apps/admin/src/favicon.ico", "apps/admin/src/assets"],
            "styles": [
              "./node_modules/@angular/material/prebuilt-themes/indigo-pink.css",
              "apps/admin/src/styles.scss"
            ],
            "scripts": []
          },
          "configurations": {
            "production": {
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "500kb",
                  "maximumError": "1mb"
                },
                {
                  "type": "anyComponentStyle",
                  "maximumWarning": "2kb",
                  "maximumError": "4kb"
                }
              ],
              "fileReplacements": [
                {
                  "replace": "apps/admin/src/environments/environment.ts",
                  "with": "apps/admin/src/environments/environment.prod.ts"
                }
              ],
              "outputHashing": "all"
            },
            "development": {
              "buildOptimizer": false,
              "optimization": false,
              "vendorChunk": true,
              "extractLicenses": false,
              "sourceMap": true,
              "namedChunks": true
            }
          },
          "defaultConfiguration": "production"
        },
        "serve": {
          "builder": "@angular-devkit/build-angular:dev-server",
          "configurations": {
            "production": {
              "browserTarget": "admin:build:production"
            },
            "development": {
              "browserTarget": "admin:build:development"
            }
          },
          "defaultConfiguration": "development"
        },
        "extract-i18n": {
          "builder": "@angular-devkit/build-angular:extract-i18n",
          "options": {
            "browserTarget": "admin:build"
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "apps/admin/src/**/*.ts",
              "apps/admin/src/**/*.html"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/apps/admin"],
          "options": {
            "jestConfig": "apps/admin/jest.config.js",
            "passWithNoTests": true
          }
        },
        "NX-build": {
          "builder": "@nrwl/workspace:run-commands",
          "outputs": [],
          "options": {
            "commands": ["nx build admin"]
          }
        },
        "deploy": {
          "builder": "@nrwl/workspace:run-commands",
          "outputs": [],
          "options": {
            "commands": [
              "npx firebase use admin-{args.ENV} --token {args.FIREBASE_TOKEN} && nx build admin && npx firebase deploy --only hosting:admin --token {args.FIREBASE_TOKEN}"
            ]
          }
        }
      }
    },
    "admin-e2e": {
      "root": "apps/admin-e2e",
      "sourceRoot": "apps/admin-e2e/src",
      "projectType": "application",
      "architect": {
        "e2e": {
          "builder": "@nrwl/cypress:cypress",
          "options": {
            "cypressConfig": "apps/admin-e2e/cypress.json",
            "tsConfig": "apps/admin-e2e/tsconfig.e2e.json",
            "devServerTarget": "admin:serve:development"
          },
          "configurations": {
            "production": {
              "devServerTarget": "admin:serve:production"
            }
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["apps/admin-e2e/**/*.{js,ts}"]
          }
        }
      }
    },
    "api": {
      "root": "apps/api",
      "sourceRoot": "apps/api/src",
      "projectType": "application",
      "architect": {
        "build": {
          "builder": "@nrwl/node:build",
          "outputs": ["{options.outputPath}"],
          "options": {
            "outputPath": "dist/apps/api",
            "main": "apps/api/src/main.ts",
            "tsConfig": "apps/api/tsconfig.app.json",
            "assets": ["apps/api/src/assets"]
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false,
              "fileReplacements": [
                {
                  "replace": "apps/api/src/environments/environment.ts",
                  "with": "apps/api/src/environments/environment.prod.ts"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@nrwl/node:execute",
          "options": {
            "buildTarget": "api:build"
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "outputs": ["{options.outputFile}"],
          "options": {
            "lintFilePatterns": ["apps/api/**/*.ts"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/apps/api"],
          "options": {
            "jestConfig": "apps/api/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "user": {
      "projectType": "application",
      "root": "apps/user",
      "sourceRoot": "apps/user/src",
      "prefix": "ng-arab",
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:browser",
          "options": {
            "outputPath": "dist/user/browser",
            "index": "apps/user/src/index.html",
            "main": "apps/user/src/main.ts",
            "polyfills": "apps/user/src/polyfills.ts",
            "tsConfig": "apps/user/tsconfig.app.json",
            "inlineStyleLanguage": "scss",
            "assets": ["apps/user/src/favicon.ico", "apps/user/src/assets"],
            "styles": ["apps/user/src/styles.scss"],
            "scripts": []
          },
          "configurations": {
            "production": {
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "500kb",
                  "maximumError": "1mb"
                },
                {
                  "type": "anyComponentStyle",
                  "maximumWarning": "2kb",
                  "maximumError": "4kb"
                }
              ],
              "fileReplacements": [
                {
                  "replace": "apps/user/src/environments/environment.ts",
                  "with": "apps/user/src/environments/environment.prod.ts"
                }
              ],
              "outputHashing": "all"
            },
            "development": {
              "buildOptimizer": false,
              "optimization": false,
              "vendorChunk": true,
              "extractLicenses": false,
              "sourceMap": true,
              "namedChunks": true
            }
          },
          "defaultConfiguration": "production"
        },
        "serve": {
          "builder": "@angular-devkit/build-angular:dev-server",
          "configurations": {
            "production": {
              "browserTarget": "user:build:production"
            },
            "development": {
              "browserTarget": "user:build:development"
            }
          },
          "defaultConfiguration": "development",
          "options": {
            "proxyConfig": "apps/user/proxy.conf.json"
          }
        },
        "extract-i18n": {
          "builder": "@angular-devkit/build-angular:extract-i18n",
          "options": {
            "browserTarget": "user:build"
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "apps/user/src/**/*.ts",
              "apps/user/src/**/*.html"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/apps/user"],
          "options": {
            "jestConfig": "apps/user/jest.config.js",
            "passWithNoTests": true
          }
        },
        "server": {
          "builder": "@angular-devkit/build-angular:server",
          "options": {
            "outputPath": "dist/user/server",
            "main": "apps/user/server.ts",
            "tsConfig": "apps/user/tsconfig.server.json",
            "inlineStyleLanguage": "scss",
            "externalDependencies": [
              "firebase",
              "@firebase/app",
              "@firebase/analytics",
              "@firebase/auth",
              "@firebase/component",
              "@firebase/database",
              "@firebase/firestore",
              "@firebase/functions",
              "@firebase/installations",
              "@firebase/messaging",
              "@firebase/storage",
              "@firebase/performance",
              "@firebase/remote-config",
              "@firebase/util"
            ]
          },
          "configurations": {
            "production": {
              "outputHashing": "media",
              "fileReplacements": [
                {
                  "replace": "apps/user/src/environments/environment.ts",
                  "with": "apps/user/src/environments/environment.prod.ts"
                }
              ]
            },
            "development": {
              "optimization": false,
              "sourceMap": true,
              "extractLicenses": false
            }
          },
          "defaultConfiguration": "production"
        },
        "serve-ssr": {
          "builder": "@nguniversal/builders:ssr-dev-server",
          "configurations": {
            "development": {
              "browserTarget": "user:build:development",
              "serverTarget": "user:server:development"
            },
            "production": {
              "browserTarget": "user:build:production",
              "serverTarget": "user:server:production"
            }
          },
          "defaultConfiguration": "development"
        },
        "prerender": {
          "builder": "@nguniversal/builders:prerender",
          "options": {
            "routes": ["/"]
          },
          "configurations": {
            "production": {
              "browserTarget": "user:build:production"
            },
            "development": {
              "browserTarget": "user:build:development"
            }
          },
          "defaultConfiguration": "production"
        },
        "NX-build": {
          "builder": "@nrwl/workspace:run-commands",
          "outputs": [],
          "options": {
            "commands": ["npm run build:ssr"]
          }
        },
        "deploy": {
          "builder": "@nrwl/workspace:run-commands",
          "outputs": [],
          "options": {
            "commands": [
              "npx firebase use user-{args.ENV} --token {args.FIREBASE_TOKEN} && npm run build:ssr && node copy-angular-app && npx firebase deploy --only functions,hosting:user --token {args.FIREBASE_TOKEN}"
            ]
          }
        }
      }
    },
    "user-e2e": {
      "root": "apps/user-e2e",
      "sourceRoot": "apps/user-e2e/src",
      "projectType": "application",
      "architect": {
        "e2e": {
          "builder": "@nrwl/cypress:cypress",
          "options": {
            "cypressConfig": "apps/user-e2e/cypress.json",
            "tsConfig": "apps/user-e2e/tsconfig.e2e.json",
            "devServerTarget": "user:serve:development"
          },
          "configurations": {
            "production": {
              "devServerTarget": "user:serve:production"
            }
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["apps/user-e2e/**/*.{js,ts}"]
          }
        }
      }
    }
  }
}
